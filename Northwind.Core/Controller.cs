//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//using Northwind.Core.BaseObjetcs;
//using Northwind.Core.BussinessObjetcs.Product;
//using Northwind.Core.BussinessObjetcs.Product.Action; 
//using Northwind.Core.BussinessObjetcs.Customer;
//using Northwind.Core.BussinessObjetcs.Customer.Actions;
//using Northwind.Database.Database;
//using System;
//using System.Collections.Generic;
//using System.Data.SqlClient;
//using Northwind.Core;

using Northwind.Core.Base;
using Northwind.Core.Common;
using Northwind.Core.Customer;
using Northwind.Core.Customer.Actions;
using Northwind.entities;
using System;

namespace Northwind.Core
{
    public class Controller
    {
       
        public static U Get<T,U>(T request)
        {
            try
            {
                IBussinessObject Action = GetTypeOf<T>(request);
                return Action.Execute<T, U>(request);
            }
            catch (Exception ex)
            {
                throw ex;
            }

        }

        private static IBussinessObject GetTypeOf<T>(T request)
        {
            if(request is entities.GetCustomerByIdRequest)
            {
                return new GetCustomerById();
            }
            return null;
        }
 /*

/// <summary>
/// 
/// </summary>
/// <returns></returns>
        public static ProductsResults GetProducts()
        {
            IBussinessObject GetProducts = null;
            ProductsResults respons = null;
            try
            {
                GetProducts = new GetProducts();
                respons = new ProductsResults
                {
                    Products = GetProducts.Execute<List<NW_Product>>(),
                    StatusObject = GetProducts.StatusObject
                };
            }
            catch (Exception)
            {
                return new ProductsResults
                {
                    Products = null,
                    StatusObject = GetProducts.StatusObject
                };
            }
            return respons;
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="CustomerId"></param>
        /// <returns></returns>
        /// <summary>
        /// 
        /// </summary>
        /// <returns></returns>
        public static CustomersResults GetCustomers()
        {
            IBussinessObject GetCustomers = null;
            CustomersResults respons = null;
            try
            {
                GetCustomers = new GetCustomers();
                respons = new CustomersResults
                {
                    Customers = GetCustomers.Execute<List<NW_Customer>>(),
                    StatusObject = GetCustomers.StatusObject
                };
            }
            catch (Exception)
            {
                return new CustomersResults
                {
                    Customers = null,
                    StatusObject = GetCustomers.StatusObject
                };
            }
            return respons;
        }
/// <summary>
/// 
/// </summary>
/// <param name="CustomerId"></param>
/// <returns></returns>
        public static CustomerResult GetCustomerSummary(RequestBase req)
        {
            IBussinessObject GetCustomerSummary = null;
            CustomerResult respons = null;
            try
            {
                GetCustomerSummary = new GetCustomerSummary(req.Customer.CustomerID);
                respons = new CustomerResult
                {
                    Customer = GetCustomerSummary.Execute<NW_Customer>(),
                    StatusObject = GetCustomerSummary.StatusObject
                };
            }
            catch (Exception)
            {
                return new CustomerResult
                {
                    Customer = null,
                    StatusObject = GetCustomerSummary.StatusObject
                };
            }
            return respons;

        }
/// <summary>
/// 
/// </summary>
/// <param name="Customer"></param>
/// <returns></returns>
        public static CustomerResult SaveCustomer(RequestBase req)
        {
            IBussinessObject SaveCustomer = null;
            CustomerResult respons = null;
            try
            {
                SaveCustomer = new SaveCustomer(req);
                respons = new CustomerResult
                {
                    Customer = SaveCustomer.Execute<NW_Customer>(),
                    StatusObject = SaveCustomer.StatusObject
                };
            }
            catch (Exception)
            {
                return new CustomerResult
                {
                    Customer = null,
                    StatusObject = SaveCustomer.StatusObject
                };
            }
            return respons;

        }
        */

    }

}

