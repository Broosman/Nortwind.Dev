//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Northwind.Database.Database
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class NorthwindDbContext : DbContext
    {
        public NorthwindDbContext()
            : base("name=NorthwindDbContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<NW_Categorie> NW_Categorie { get; set; }
        public virtual DbSet<NW_Customer> NW_Customer { get; set; }
        public virtual DbSet<NW_CustomerCustomerDemo> NW_CustomerCustomerDemo { get; set; }
        public virtual DbSet<NW_CustomerDemographic> NW_CustomerDemographic { get; set; }
        public virtual DbSet<NW_Employee> NW_Employee { get; set; }
        public virtual DbSet<NW_EmployeeTerritorie> NW_EmployeeTerritorie { get; set; }
        public virtual DbSet<NW_Order> NW_Order { get; set; }
        public virtual DbSet<NW_OrderDetail> NW_OrderDetail { get; set; }
        public virtual DbSet<NW_Product> NW_Product { get; set; }
        public virtual DbSet<NW_Region> NW_Region { get; set; }
        public virtual DbSet<NW_Shipper> NW_Shipper { get; set; }
        public virtual DbSet<NW_Supplier> NW_Supplier { get; set; }
        public virtual DbSet<NW_Territorie> NW_Territorie { get; set; }
    
        public virtual ObjectResult<GetCustomerById_Result> GetCustomerById(string customerId)
        {
            var customerIdParameter = customerId != null ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerById_Result>("GetCustomerById", customerIdParameter);
        }
    
        public virtual ObjectResult<GetCustomerOrders_Result> GetCustomerOrders(string customerId)
        {
            var customerIdParameter = customerId != null ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerOrders_Result>("GetCustomerOrders", customerIdParameter);
        }
    }
}
